'fileTypes': [
  'dps'
]

'name': 'Deepsec'

'patterns': [
  {
    'match': '//.*'
    'name': 'comment.line'
  }
  {
    'name': 'comment.multiline'
    'begin': '\\(\\*'
    'end': '\\*\\)'
  }
  {
    'name': 'comment.multiline'
    'begin': '/\\*'
    'end': '\\*/'
  }
  {
    'match': '\\b([0-9]+)\\b'
    'captures':
      '1':
        'name': 'constant.numeric'
  }
  {
    'match': '\\b(match|with)\\b'
    'captures':
      '1':
        'name': 'keyword.match'
  }
  {
    'match': '(free|const)\\s+((\\w|,|\\s|\')+)\\s*(\\[\\w+\\])?\\s*(\\.)'
    'captures':
      '1':
        'name': 'keyword.control.deepsec'
      '2':
        'patterns': [
          {
            'match': '(\\w|\')+'
            'name': 'entity.name.function.deepsec'
          }
        ]
      '4':
        'patterns': [
          {
            'include': '#options'
          }
        ]
      '5':
        'name': 'keyword.deepsec'
  }
  {
    'match': '(fun)\\s+((\\w|\')+)\\s*/\\s*([0-9]+)\\s*(\\[\\w+\\])?\\s*(\\.)'
    'captures':
      '1':
        'name': 'keyword.control.deepsec'
      '2':
        'name': 'entity.name.function.deepsec'
      '4':
        'name': 'constant.numeric'
      '5':
        'patterns': [
          {
            'include': '#options'
          }
        ]
      '6':
        'name': 'keyword.deepsec'
  }
  {
    'name': 'meta.reduc_definition1.deepsec'
    'begin': '(reduc)\\s*$'
    'beginCaptures':
      '1':
        'name': 'keyword.control.deepsec'
    'end': '(\\[\\w+\\])?\\s*(\\.)'
    'endCaptures':
      '1':
        'patterns': [
          {
            'include': '#options'
          }
        ]
      '2':
        'name': 'keyword.deepsec'
    'patterns': [
      {
        'match': '^(\\s*(\\w|\')+)'
        'name': 'entity.name.function.deepsec'
      }
      {
        'match': ';'
        'name': 'keyword.control.deepsec'
      }
      {
        'match': '(->)'
        'name': 'constant'
      }
    ]
  }
  {
    'name': 'meta.reduc_definition2.deepsec'
    'begin': '(reduc)\\s+((\\w|\')+)\\s*\\('
    'beginCaptures':
      '1':
        'name': 'keyword.control.deepsec'
      '2':
        'name': 'entity.name.function.deepsec'
    'end': '(\\[\\w+\\])?\\s*(\\.)'
    'endCaptures':
      '1':
        'patterns': [
          {
            'include': '#options'
          }
        ]
      '2':
        'name': 'keyword.deepsec'
    'patterns': [
      {
        'match': '^(\\s*(\\w|\')+)'
        'name': 'entity.name.function.deepsec'
      }
      {
        'match': ';'
        'name': 'keyword.control.deepsec'
      }
      {
        'match': '(->)'
        'name': 'constant'
      }
    ]
  }
  {
    'match': '(new)\\s+((\\w|\')+)'
    'name': 'meta.declaration_name.deepsec'
    'captures':
      '1':
        'name': 'keyword.control.deepsec'
      '2':
        'name': 'entity.name.function.deepsec'
  }
  {
    'match': '(let)\\s+((\\w|\')+)\\s*(\\((\\w|,|\'|\\s)+\\))?\\s*='
    'name': 'meta.declaration_let.deepsec'
    'captures':
      '1':
        'name': 'keyword.control.deepsec'
      '2':
        'name': 'entity.name.function.deepsec'
      '4':
        'patterns': [
          {
            'match': '(\\w|\')+'
            'name': 'entity.name.variable.deepsec'
          }
        ]
  }
  {
    'match': '(let)\\s+(\\((\\w|,|=|\'|\\s|\\(|\\))+\\))?\\s*='
    'name': 'meta.declaration_let2.deepsec'
    'captures':
      '1':
        'name': 'keyword.control.deepsec'
      '2':
        'patterns': [
          {
            'match': '(\\w|\')+'
            'name': 'entity.name.variable.deepsec'
          }
          {
            'match': '='
            'name': 'support.function.pervasives.boolean-operatons.proverif'
          }
        ]
  }
  {
    'match': '(;|\\.|\\|)'
    'name': 'keyword.control'
  }
  {
    'match': '='
    'name': 'support.function.pervasives.boolean-operatons.proverif'
  }
  {
    'match': '(free|new)((\\s+[a-zA-Z][a-zA-Z0-9\'_]*)*)'
    'captures':
      '1':
        'name': 'keyword'
      '2':
        'name': 'variable'
  }
  {
    'match': 'query\\s+trace_equiv'
    'name': 'constant.deepsec'
  }
  {
    'match': '\\b(in|out|if|then|else)\\b'
    'name': 'keyword.control'
  }
]
'scopeName': 'source.deepsec'

'repository':
  'options':
    'patterns': [
      {
        'begin': '\\['
        'end': '\\]'
        'name': 'meta.options_declaration.proverif'
        'patterns': [
          'match': '(\\w|\')+'
          'name': 'entity.name.tag.proverif'
        ]
      }
    ]
